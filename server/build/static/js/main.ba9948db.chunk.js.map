{"version":3,"sources":["pages/Home.js","pages/About.js","pages/Stuff.js","pages/Layout.js","pages/Dashboard.js","config/Url.js","controller/Submit.js","pages/Login.js","pages/Register.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Component","About","align","Stuff","Layout","react_router_dom","to","Button_default","variant","React","Dashboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","undefined","logout","bind","assertThisInitialized","main_component","fetch","method","credentials","then","res","text","alert","setState","status","json","result","Paper_default","elevation","className","email","username","type","color","onClick","render_data","_callee","url","regenerator_default","wrap","_context","prev","next","headers","Accept","Content-Type","body","stop","submit","Login","password","is_log_in","notSubmit","change_form","login","check_login","JSON","stringify","e","preventDefault","param","defineProperty","target","value","_this2","Dashboard_Dashboard","onSubmit","Typography_default","component","TextField_default","margin","label","onChange","required","Register","confirm_password","sign_up","App","basename","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba9948db.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        This is a homepage\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div align = \"center\">\r\n        About me\r\n        Just a student who falls in love with programming\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Stuff extends Component {\r\n  render() {\r\n    return (\r\n      <div align = \"center\">\r\n        Duis laborum nostrud ipsum officia aliquip ex magna. Sint id magna occaecat laboris in laboris aliqua in ipsum in ut. Aute consectetur incididunt reprehenderit nisi pariatur non esse deserunt et mollit. Esse irure nulla dolor id veniam proident velit nostrud est proident incididunt in. Sit sint nostrud quis duis.\r\n\r\nAnim sit cillum adipisicing occaecat dolor aliqua quis excepteur nisi proident ipsum dolore incididunt aliqua. Adipisicing eu reprehenderit cillum ut culpa deserunt id eu minim in adipisicing ut. Incididunt qui nisi tempor cupidatat veniam sint enim tempor nostrud enim cillum. Nulla enim ipsum dolore quis consequat. Ut quis esse nostrud anim commodo ex nostrud nisi sunt Lorem cupidatat esse commodo dolor. Ut aliquip laboris exercitation ipsum elit qui et nisi esse veniam.\r\n\r\nIpsum ea mollit sunt quis proident dolore excepteur eu dolore in magna cillum do. Labore cupidatat culpa tempor commodo proident est consectetur. Labore ipsum occaecat aliqua ea. Lorem id ipsum est veniam in laborum magna enim dolor eu pariatur nulla aute.\r\n\r\nCulpa consequat voluptate veniam aliqua ullamco anim. Nisi sit cupidatat ipsum et adipisicing ullamco nostrud occaecat. Ex ad deserunt anim velit nostrud duis commodo. Enim anim consectetur laborum sit ad sint.\r\n\r\nDuis pariatur Lorem incididunt irure duis cupidatat irure tempor ullamco magna dolore est. Nisi labore ipsum esse et cupidatat eu. Eu adipisicing ex laboris commodo excepteur minim sunt qui sunt eu elit incididunt dolore. Enim commodo labore ullamco ullamco consectetur proident nostrud non reprehenderit eu voluptate. Officia consectetur excepteur consectetur pariatur excepteur laboris eu. Cupidatat enim sunt aliquip deserunt commodo id consectetur. Voluptate ea officia in cillum ad esse labore dolor consectetur do id laborum.\r\n\r\nAliquip voluptate culpa et reprehenderit. Veniam cillum cupidatat deserunt voluptate minim voluptate laborum. Voluptate minim minim elit aute id commodo eu nostrud reprehenderit enim ullamco aute. Sit cupidatat et consectetur excepteur nisi excepteur nostrud deserunt pariatur. Nisi est cupidatat dolor consectetur consequat deserunt aliqua sint. Irure dolor anim do minim aliquip ipsum.\r\n\r\nEsse eu in culpa aliquip sint nisi aute deserunt ut fugiat et velit. Dolore magna esse deserunt do nostrud dolore irure proident pariatur exercitation nulla Lorem aute. Voluptate ullamco culpa occaecat in excepteur ullamco. Lorem deserunt cupidatat qui voluptate eiusmod tempor qui eiusmod do ex esse nulla eiusmod. Adipisicing cillum pariatur veniam adipisicing nulla commodo eiusmod ullamco do. Ullamco laboris consectetur non aliqua ullamco elit mollit est in labore anim. Id et commodo duis consectetur tempor in.\r\n\r\nCulpa est sunt qui deserunt ad aliqua velit. Amet labore minim ea labore dolore ipsum anim consequat pariatur nostrud. Amet nulla nostrud voluptate deserunt mollit commodo labore officia. Non aute commodo ipsum est ad tempor anim do irure voluptate ut qui veniam.\r\n\r\nAd occaecat excepteur anim fugiat. Aute sunt nisi aliqua excepteur quis voluptate in dolore excepteur eu aliquip. Sit laborum et eiusmod aliquip laborum aliqua aliqua sunt irure reprehenderit eiusmod. Proident aute sit dolor consectetur ad culpa duis ipsum aliqua in sit. Laborum ut elit duis aute quis eiusmod sit nulla eu adipisicing. Lorem et deserunt nisi anim velit excepteur est deserunt pariatur voluptate id minim pariatur. Aliqua magna eu voluptate quis deserunt in ullamco ad veniam velit velit consequat nostrud.\r\n\r\nEnim ea nostrud quis duis ut cupidatat proident mollit proident velit consectetur anim amet. Labore occaecat duis eiusmod dolor. Esse ipsum cupidatat voluptate aute voluptate esse minim mollit do elit qui velit. In ipsum amet Lorem irure. Dolore nulla laboris proident nulla. Laboris esse voluptate consequat pariatur ut culpa do exercitation esse incididunt mollit ad. In cillum magna sit culpa veniam pariatur do tempor nostrud qui fugiat non.\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Layout extends React.Component{\r\n    render(){\r\n      return(\r\n        <div>\r\n          <Link to = \"/login\"><Button variant = \"contained\">LOG IN</Button></Link>\r\n          <br/>\r\n          <br/>\r\n          <Link to = \"/register\"><Button variant = \"contained\">REGISTER</Button></Link>\r\n          <br/>\r\n          <br/>\r\n          <Link to = \"/dashboard\"><Button variant = \"contained\">DASHBOARD</Button></Link>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LOG_OUT_URL, DASHBOARD_URL } from '../config/Url';\r\nimport '../App.css';\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: undefined\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.main_component = this.main_component.bind(this);\r\n  }\r\n\r\n  logout() {\r\n    fetch(LOG_OUT_URL, {\r\n      method: \"GET\",\r\n      credentials:'include'\r\n    }).then(res => res.text().then(res => alert(res)));\r\n    this.setState({ data: false });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await fetch(DASHBOARD_URL,{\r\n      method: \"GET\",\r\n      credentials:'include'\r\n    });\r\n\r\n    if(res.status === 200){\r\n        let result = await res.json();\r\n        this.setState({data: result});\r\n    }\r\n\r\n    else{\r\n        let result = await res.text();\r\n        this.setState({data: false});\r\n        alert(result);\r\n    }\r\n    \r\n  }\r\n\r\n  render_data(data) {\r\n    return (\r\n        <Paper elevation={1} className=\"center_content\">\r\n          <h1 align=\"center\">Your email: {data.email}</h1>\r\n          <h1 align=\"center\">Your username: {data.username}</h1>\r\n          <div className = \"center\">\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            onClick={this.logout}\r\n          >\r\n            Log out\r\n          </Button>\r\n          </div>\r\n        </Paper>\r\n    );\r\n  }\r\n  \r\n  main_component(){\r\n    if(this.state.data !== undefined) {\r\n      if(this.state.data) {\r\n        return (\r\n          <div>\r\n          {this.render_data(this.state.data)}\r\n          </div>\r\n        )\r\n      }\r\n      else {\r\n        return(\r\n        <div className = \"center\">\r\n          You haven't logged in yet\r\n        </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    else {\r\n      return <div></div>\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className = \"float-up\">\r\n      {this.main_component()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","let LOG_OUT_URL = '/api/logout';\r\nlet LOG_IN_URL = '/api/login';\r\nlet DASHBOARD_URL = '/api/dashboard';\r\nlet REGISTER_URL = '/api/register';\r\n\r\nexport {LOG_IN_URL, LOG_OUT_URL, DASHBOARD_URL, REGISTER_URL};","\r\nasync function submit(url,data)\r\n{\r\n  await fetch(url,{\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body:data,\r\n    credentials:'include'\r\n  }).then(res => res.text()\r\n    .then(res => alert(res)));\r\n};\r\n\r\nexport default submit;","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport submit from '../controller/Submit';\r\nimport { DASHBOARD_URL, LOG_IN_URL } from '../config/Url';\r\nimport Dashboard from './Dashboard';\r\nimport '../App.css';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props)\r\n    {\r\n      super(props);\r\n      this.state = {\r\n        email:undefined,\r\n        password:undefined,\r\n        is_log_in:undefined,\r\n        data:undefined\r\n      };\r\n      this.notSubmit = this.notSubmit.bind(this);\r\n      this.change_form = this.change_form.bind(this);\r\n      this.login = this.login.bind(this);\r\n      this.check_login = this.check_login.bind(this);\r\n      this.main_component = this.main_component.bind(this);\r\n    }\r\n    async check_login()\r\n    {\r\n      let res = await fetch(DASHBOARD_URL,{\r\n        method: 'GET',\r\n        credentials:'include'\r\n      });\r\n\r\n      if(res.status === 200){\r\n        let result = await res.json();\r\n        this.setState({is_log_in:true,data:result});\r\n      }\r\n\r\n      else{\r\n        this.setState({is_log_in:false});\r\n      }\r\n\r\n    }\r\n    componentDidMount(){\r\n      this.check_login();\r\n    }\r\n    async login()\r\n    {\r\n      if(this.state.email && this.state.password)\r\n      {\r\n      let data = JSON.stringify({\r\n        email:this.state.email,\r\n        password:this.state.password\r\n      });\r\n      await submit(LOG_IN_URL,data);\r\n      this.check_login();\r\n      }\r\n    }\r\n    notSubmit(e)\r\n    {\r\n      e.preventDefault();\r\n    }\r\n    change_form(e,param)\r\n    {\r\n      this.setState({[param]:e.target.value})\r\n    }\r\n    main_component(){\r\n      if(this.state.is_log_in !== undefined) {\r\n        if(this.state.is_log_in) {\r\n          return <Dashboard />\r\n        }\r\n        else {\r\n          return (\r\n            <Paper elevation = {1} className = \"center_content\">\r\n            <form className = \"center\" onSubmit =  {this.notSubmit} >\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Log in\r\n            </Typography>\r\n            <TextField margin = \"normal\" className = \"test\" label = \"Email\" onChange ={(e) => this.change_form(e,\"email\")} required />\r\n            <br/>\r\n            <TextField margin = \"normal\" className = \"test\" label = \"Password\" onChange = {(e) => this.change_form(e,\"password\")} required />\r\n            <br/>\r\n            <Button type = \"submit\" color = \"primary\" variant = \"contained\" className = \"login_btn\" onClick = {this.login}>Log in</Button>\r\n            </form>\r\n            </Paper>\r\n          );\r\n        }\r\n      }\r\n      else {\r\n        return <div></div>\r\n      }\r\n    }\r\n  render() {\r\n    return (\r\n      <div className = \"float-up\">\r\n        {this.main_component()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport submit from '../controller/Submit';\r\nimport { REGISTER_URL } from '../config/Url';\r\nimport '../App.css';\r\n\r\nexport default class Register extends Component {\r\n    constructor(props)\r\n    {\r\n      super(props);\r\n      this.state = {\r\n        email:undefined,\r\n        password:undefined,\r\n        confirm_password:undefined,\r\n        username:undefined\r\n      }\r\n      this.notSubmit = this.notSubmit.bind(this);\r\n      this.change_form = this.change_form.bind(this);\r\n      this.sign_up = this.sign_up.bind(this);\r\n    }\r\n    sign_up()\r\n    {\r\n      if(this.state.email && this.state.username && this.state.password && this.state.confirm_password)\r\n      {\r\n      if(this.state.password === this.state.confirm_password)\r\n      {\r\n      let data = JSON.stringify({\r\n        email:this.state.email,\r\n        username:this.state.username,\r\n        password:this.state.password\r\n      });\r\n      submit(REGISTER_URL,data);\r\n      }\r\n      else\r\n      {\r\n        alert(\"Two passwords are not the same\");\r\n      }\r\n      }\r\n    }\r\n    notSubmit(e)\r\n    {\r\n      e.preventDefault();\r\n    }\r\n    change_form(e,param)\r\n    {\r\n      this.setState({[param]:e.target.value})\r\n    }\r\n    render()\r\n    {\r\n      return(\r\n        <div className = \"float-up\">\r\n          <Paper elevation = {1} className = \"center_content\">\r\n          <form className = \"center\" onSubmit =  {this.notSubmit}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n          </Typography>\r\n          <TextField margin = \"normal\" className = \"test\" label = \"Email\" onChange = {(e) => {this.change_form(e,\"email\")}} required />\r\n          <br/>\r\n          <TextField margin = \"normal\" className = \"test\" label = \"Username\" onChange = {(e) => {this.change_form(e,\"username\")}} required />\r\n          <br/>\r\n          <TextField margin = \"normal\" className = \"test\" label = \"Password\" onChange = {(e) => {this.change_form(e,\"password\")}} required />\r\n          <br/>\r\n          <TextField margin = \"normal\" className = \"test\" label = \"Confirm password\" onChange = {(e) => {this.change_form(e,\"confirm_password\")}} required />\r\n          <br/>\r\n          <Button type = \"submit\" color = \"primary\" variant = \"contained\" className = \"login_btn\" onClick = {this.sign_up}>Sign up</Button>\r\n          </form>\r\n          </Paper>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router,Route,Link} from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\n\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Stuff from './pages/Stuff';\nimport Layout from './pages/Layout';\nimport Dashboard from './pages/Dashboard';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\n\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Router basename = \"/\">\n\n          <Link className = \"HOME\" to = \"/\"><Button variant = \"contained\" color = \"secondary\">HOME</Button></Link>\n\n          <Route exact path = \"/\" component = {Layout} />\n\n          <Route path = \"/home\" component = {Home}></Route>\n          <Route path = \"/about\" component = {About}></Route>\n          <Route path = \"/stuff\" component = {Stuff}></Route>\n\n          <Route path = \"/login\" component = {Login} />\n          <Route path = \"/register\" component = {Register} />\n          <Route path = \"/dashboard\" component = {Dashboard}/>\n\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}